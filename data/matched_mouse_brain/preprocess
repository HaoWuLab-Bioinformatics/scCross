

import numpy as np
import pandas as pd
import scipy.io
import anndata
import scanpy as sc

rna_matrix = scipy.io.mmread("../download/Chen-2019/GSE126074_AdBrainCortex_SNAREseq_cDNA.counts.mtx.gz").T.tocsr()
rna_obs = pd.read_csv("../download/Chen-2019/GSE126074_AdBrainCortex_SNAREseq_cDNA.barcodes.tsv.gz", header=None, index_col=0)
rna_var = pd.read_csv("../download/Chen-2019/GSE126074_AdBrainCortex_SNAREseq_cDNA.genes.tsv.gz", header=None, index_col=0)
rna_obs.index.name, rna_var.index.name = "cells", "genes"
rna = anndata.AnnData(X=rna_matrix, obs=rna_obs, var=rna_var)



rna.obs["domain"] = "scRNA-seq"
rna.obs["protocol"] = "SNARE-seq"
rna.obs["dataset"] = "Chen-2019-RNA"


atac_matrix = scipy.io.mmread("../download/Chen-2019/GSE126074_AdBrainCortex_SNAREseq_chromatin.counts.mtx.gz").T.tocsr()
atac_obs = pd.read_csv("../download/Chen-2019/GSE126074_AdBrainCortex_SNAREseq_chromatin.barcodes.tsv.gz", header=None, index_col=0)
atac_var = pd.read_csv("../download/Chen-2019/GSE126074_AdBrainCortex_SNAREseq_chromatin.peaks.tsv.gz", header=None, index_col=0)
atac_obs.index.name, atac_var.index.name = "cells", "peaks"
atac = anndata.AnnData(X=atac_matrix, obs=atac_obs, var=atac_var)


atac.obs["domain"] = "scATAC-seq"
atac.obs["protocol"] = "SNARE-seq"
atac.obs["dataset"] = "Chen-2019-ATAC"



atac.var["chrom"] = np.vectorize(lambda x: x.split(":")[0])(atac.var_names)
atac.var["chromStart"] = np.vectorize(lambda x: x.split(":")[1].split("-")[0])(atac.var_names).astype(int)
atac.var["chromEnd"] = np.vectorize(lambda x: x.split("-")[1])(atac.var_names).astype(int)
atac.var["genome"] = "mm10"


meta = pd.read_csv("../download/Chen-2019/AdBrainCortex_SNAREseq_metadata.csv", index_col=0)
meta = meta.query("Ident != 'Mis'")
meta.head()


rna = rna[meta.index, :]
atac = atac[meta.index, :]



rna.obs["cell_type"] = meta["Ident"]
atac.obs["cell_type"] = meta["Ident"]


retained_genes = rna.var.dropna(subset=["chrom", "chromStart", "chromEnd"]).index
rna = rna[:, retained_genes]
rna.var = rna.var.astype({"chromStart": int, "chromEnd": int})



sc.pp.filter_genes(rna, min_counts=1)


sc.pp.filter_genes(atac, min_counts=1)



sc.pp.highly_variable_genes(rna, n_top_genes=2000, flavor="seurat_v3")
rna.var.highly_variable.sum()

cluster2ann = {
    'E2Rasgrf2':'E2',
    'E3Rorb':'E3',
    'E6Tle4':'E6',
    'E4Il1rapl2':'E4',
    'E5Galnt14':'E5',
    'E4Thsd7a':'E4',
    'Ast':'Ast',
    'E5Parm1':'E5',
    'OliM':'Oli',
    'InP':'In',
    'E3Rmst':'E3',
    'InS':'In',
    'E5Sulf1':'E5',
    'Clau':'Clau',
    'InV':'In',
    'InN':'In',
    'OPC':'Oli',
    'E5Tshz2':'E5',
    'Mic':'Oli',
    'OliI':'Oli',
    'Endo':'E2',
    'Peri':'E3'
}
rna.obs['cell_type'] = rna.obs['cell_type'].map(cluster2ann).astype('category')
atac.obs['cell_type'] = rna.obs['cell_type'].map(cluster2ann).astype('category')



rna.write("rna_preprocessed.h5ad", compression="gzip")
atac.write("atac_preprocessed.h5ad", compression="gzip")
